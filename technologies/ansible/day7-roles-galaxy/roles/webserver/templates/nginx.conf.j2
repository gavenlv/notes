# {{ ansible_managed }}
# Nginx Configuration Generated by Ansible
# Host: {{ inventory_hostname }}
# Date: {{ ansible_date_time.iso8601 }}

user {{ webserver_user }};
worker_processes {{ webserver_worker_processes }};
pid /run/nginx.pid;

events {
    worker_connections {{ webserver_worker_connections }};
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout {{ webserver_keepalive_timeout }};
    types_hash_max_size 2048;
    client_max_body_size {{ webserver_client_max_body_size }};
    
    # Hide Server Version
    {% if webserver_hide_version %}
    server_tokens {{ webserver_server_tokens }};
    {% endif %}

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format {{ webserver_log_format }} '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent"';
    access_log {{ webserver_access_log }} {{ webserver_log_format }};
    error_log {{ webserver_error_log }} {{ webserver_log_level }};

    # Gzip Compression
    {% if webserver_enable_gzip %}
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level {{ webserver_gzip_level }};
    gzip_types
        {% for type in webserver_gzip_types %}
        {{ type }}{% if not loop.last %}{% endif %}
        {% endfor %};
    gzip_disable "MSIE [1-6]\.";
    {% endif %}

    # SSL Settings
    {% if webserver_enable_ssl %}
    ssl_protocols {{ webserver_ssl_protocols }};
    ssl_ciphers {{ webserver_ssl_ciphers }};
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    {% endif %}

    # Security Headers
    {% if webserver_security_headers is defined %}
    {% for header, value in webserver_security_headers.items() %}
    add_header {{ header | replace('_', '-') | title }} "{{ value }}" always;
    {% endfor %}
    {% endif %}

    # Cache Settings
    {% if webserver_enable_cache %}
    proxy_cache_path {{ webserver_cache_dir }} 
                     levels=1:2 
                     keys_zone=cache:{{ webserver_cache_max_size }} 
                     inactive={{ webserver_cache_inactive }}
                     max_size={{ webserver_cache_max_size }};
    {% endif %}

    # Upstream Servers
    {% for upstream in webserver_upstream_servers %}
    upstream {{ upstream.name }} {
        {% if upstream.method == 'least_conn' %}
        least_conn;
        {% elif upstream.method == 'ip_hash' %}
        ip_hash;
        {% elif upstream.method == 'random' %}
        random;
        {% endif %}
        {% for server in upstream.servers %}
        server {{ server }};
        {% endfor %}
    }
    {% endfor %}

    # Status Page
    {% if webserver_enable_status %}
    server {
        listen 127.0.0.1:8080;
        server_name localhost;
        
        location {{ webserver_status_path }} {
            stub_status on;
            access_log off;
            {% for ip in webserver_status_allowed_ips %}
            allow {{ ip }};
            {% endfor %}
            deny all;
        }
    }
    {% endif %}

    # Include additional configurations
    include {{ webserver_config_paths[webserver_type]['conf_d'] }}/*.conf;
    include {{ webserver_config_paths[webserver_type]['sites_enabled'] }}/*;
} 